import jenkins.model.*
import hudson.model.*

def configXml = "<?xml version='1.1' encoding='UTF-8'?>"
configXml = configXml + "<project>"
configXml = configXml + "  <actions/>"
configXml = configXml + "  <description>A programmatic way to the creation of projects</description>"
configXml = configXml + "  <displayName>Util - Job DSL</displayName>"
configXml = configXml + "  <keepDependencies>false</keepDependencies>"
configXml = configXml + "  <properties>"
configXml = configXml + "    <jenkins.model.BuildDiscarderProperty>"
configXml = configXml + "      <strategy class='hudson.tasks.LogRotator'>"
configXml = configXml + "        <daysToKeep>-1</daysToKeep>"
configXml = configXml + "        <numToKeep>10</numToKeep>"
configXml = configXml + "        <artifactDaysToKeep>-1</artifactDaysToKeep>"
configXml = configXml + "        <artifactNumToKeep>1</artifactNumToKeep>"
configXml = configXml + "      </strategy>"
configXml = configXml + "    </jenkins.model.BuildDiscarderProperty>"
configXml = configXml + "    <hudson.plugins.disk__usage.DiskUsageProperty plugin='disk-usage@{{ jenkins_plugin_disk_usage_version_fact }}'/>"
configXml = configXml + "    <hudson.model.ParametersDefinitionProperty>"
configXml = configXml + "      <parameterDefinitions>"
configXml = configXml + "        <hudson.model.StringParameterDefinition>"
configXml = configXml + "          <name>github_branch_name</name>"
configXml = configXml + "          <description>Github branch name</description>"
configXml = configXml + "          <defaultValue>master</defaultValue>"
configXml = configXml + "          <trim>true</trim>"
configXml = configXml + "        </hudson.model.StringParameterDefinition>"
configXml = configXml + "      </parameterDefinitions>"
configXml = configXml + "    </hudson.model.ParametersDefinitionProperty>"
configXml = configXml + "  </properties>"
configXml = configXml + "  <scm class='hudson.plugins.git.GitSCM' plugin='git@{{ jenkins_plugin_git_version_fact }}'>"
configXml = configXml + "    <configVersion>2</configVersion>"
configXml = configXml + "    <userRemoteConfigs>"
configXml = configXml + "      <hudson.plugins.git.UserRemoteConfig>"
configXml = configXml + "        <url>https://github.com/gvirtuoso/ansible-aws-elasticbeanstalk-jenkins-pipeline.git</url>"
configXml = configXml + "      </hudson.plugins.git.UserRemoteConfig>"
configXml = configXml + "    </userRemoteConfigs>"
configXml = configXml + "    <branches>"
configXml = configXml + "      <hudson.plugins.git.BranchSpec>"
configXml = configXml + "        <name>*/\${github_branch_name}</name>"
configXml = configXml + "      </hudson.plugins.git.BranchSpec>"
configXml = configXml + "    </branches>"
configXml = configXml + "    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>"
configXml = configXml + "    <submoduleCfg class='list'/>"
configXml = configXml + "    <extensions/>"
configXml = configXml + "  </scm>"
configXml = configXml + "  <canRoam>true</canRoam>"
configXml = configXml + "  <disabled>false</disabled>"
configXml = configXml + "  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>"
configXml = configXml + "  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>"
configXml = configXml + "  <triggers>"
configXml = configXml + "    <hudson.triggers.SCMTrigger>"
configXml = configXml + "      <spec>* * * * *</spec>"
configXml = configXml + "      <ignorePostCommitHooks>false</ignorePostCommitHooks>"
configXml = configXml + "    </hudson.triggers.SCMTrigger>"
configXml = configXml + "  </triggers>"
configXml = configXml + "  <concurrentBuild>false</concurrentBuild>"
configXml = configXml + "  <builders>"
configXml = configXml + "    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin='job-dsl@{{ jenkins_plugin_job_dsl_version_fact }}'>"
configXml = configXml + "      <targets>dsl/*.groovy</targets>"
configXml = configXml + "      <usingScriptText>false</usingScriptText>"
configXml = configXml + "      <sandbox>false</sandbox>"
configXml = configXml + "      <ignoreExisting>false</ignoreExisting>"
configXml = configXml + "      <ignoreMissingFiles>false</ignoreMissingFiles>"
configXml = configXml + "      <failOnMissingPlugin>false</failOnMissingPlugin>"
configXml = configXml + "      <failOnSeedCollision>false</failOnSeedCollision>"
configXml = configXml + "      <unstableOnDeprecation>false</unstableOnDeprecation>"
configXml = configXml + "      <removedJobAction>DELETE</removedJobAction>"
configXml = configXml + "      <removedViewAction>DELETE</removedViewAction>"
configXml = configXml + "      <removedConfigFilesAction>DELETE</removedConfigFilesAction>"
configXml = configXml + "      <lookupStrategy>JENKINS_ROOT</lookupStrategy>"
configXml = configXml + "    </javaposse.jobdsl.plugin.ExecuteDslScripts>"
configXml = configXml + "  </builders>"
configXml = configXml + "  <publishers>"
configXml = configXml + "    <hudson.tasks.ArtifactArchiver>"
configXml = configXml + "      <artifacts>dsl/*.groovy</artifacts>"
configXml = configXml + "      <allowEmptyArchive>false</allowEmptyArchive>"
configXml = configXml + "      <onlyIfSuccessful>false</onlyIfSuccessful>"
configXml = configXml + "      <fingerprint>false</fingerprint>"
configXml = configXml + "      <defaultExcludes>true</defaultExcludes>"
configXml = configXml + "      <caseSensitive>true</caseSensitive>"
configXml = configXml + "    </hudson.tasks.ArtifactArchiver>"
configXml = configXml + "    <hudson.plugins.ws__cleanup.WsCleanup plugin='ws-cleanup@{{ jenkins_plugin_ws_cleanup_version_fact }}'>"
configXml = configXml + "      <patterns class='empty-list'/>"
configXml = configXml + "      <deleteDirs>false</deleteDirs>"
configXml = configXml + "      <skipWhenFailed>false</skipWhenFailed>"
configXml = configXml + "      <cleanWhenSuccess>true</cleanWhenSuccess>"
configXml = configXml + "      <cleanWhenUnstable>true</cleanWhenUnstable>"
configXml = configXml + "      <cleanWhenFailure>true</cleanWhenFailure>"
configXml = configXml + "      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>"
configXml = configXml + "      <cleanWhenAborted>true</cleanWhenAborted>"
configXml = configXml + "      <notFailBuild>false</notFailBuild>"
configXml = configXml + "      <cleanupMatrixParent>false</cleanupMatrixParent>"
configXml = configXml + "      <externalDelete></externalDelete>"
configXml = configXml + "      <disableDeferredWipeout>false</disableDeferredWipeout>"
configXml = configXml + "    </hudson.plugins.ws__cleanup.WsCleanup>"
configXml = configXml + "  </publishers>"
configXml = configXml + "  <buildWrappers>"
configXml = configXml + "    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin='timestamper@{{ jenkins_plugin_timestamper_version_fact }}'/>"
configXml = configXml + "  </buildWrappers>"
configXml = configXml + "</project>"

def xmlStream = new ByteArrayInputStream( configXml.getBytes() )
def jobName = "util_job_dsl"

def jenkinsInstance = Jenkins.getInstance()

// Delete job if exists to ensure the versioned version
for( Item item : jenkinsInstance.getAllItems() ) {
    if(item instanceof Job) {
        Job job = ((Job)item)
        if(job.name.equals(jobName)) {
            job.delete()
            break
        }
    }
}

// Creating the job dsl
jenkinsInstance.createProjectFromXML(jobName, xmlStream)
